"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[3163],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99137:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),l=["components"],i={},s="R18 Name Resolution System for Interblock",c={unversionedId:"Requests/R18",id:"Requests/R18",title:"R18 Name Resolution System for Interblock",description:"We need a strategy for turning names into chainIds.  We should be able to use collections of resolvers together, and select what priority to give them based on context.  Crucially we should be able to intentionally blind ourselves to content we do not want to see by selecting name resolvers that apply our own values",source:"@site/dust/Requests/R18.md",sourceDirName:"Requests",slug:"/Requests/R18",permalink:"/dust/Requests/R18",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/dust/Requests/R18.md",tags:[],version:"current",frontMatter:{},sidebar:"dust",previous:{title:"R17 Covenant Resolution System",permalink:"/dust/Requests/R17"},next:{title:"R19 T83 Resilient Warship",permalink:"/dust/Requests/R19"}},u={},p=[],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"r18-name-resolution-system-for-interblock"},"R18 Name Resolution System for Interblock"),(0,a.kt)("p",null,"We need a strategy for turning names into chainIds.  We should be able to use collections of resolvers together, and select what priority to give them based on context.  Crucially we should be able to intentionally blind ourselves to content we do not want to see by selecting name resolvers that apply our own values"),(0,a.kt)("p",null,"Requirements:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Support international languages and any future languages by default"),(0,a.kt)("li",{parentName:"ol"},"Allow multiple resolutions"),(0,a.kt)("li",{parentName:"ol"},"Context aware resolutions eg: the name ",(0,a.kt)("inlineCode",{parentName:"li"},"bob")," could resolve to different chains depending on what connections your chain had"),(0,a.kt)("li",{parentName:"ol"},"Define a url protocol scheme such as ",(0,a.kt)("inlineCode",{parentName:"li"},"interblock://hostname/path")),(0,a.kt)("li",{parentName:"ol"},"Any chain should be able to act as a name resolver by allowing read access to its child alias HAMT"),(0,a.kt)("li",{parentName:"ol"},"Never rely on a single chain"),(0,a.kt)("li",{parentName:"ol"},"Allow charging for queries"),(0,a.kt)("li",{parentName:"ol"},"Allow anyone to override any query and then pass this on to anyone who will listen")))}d.isMDXComponent=!0}}]);