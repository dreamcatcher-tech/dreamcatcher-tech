"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[2322],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return y}});var n=r(67294);function c(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){c(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e){if(null==t)return{};var r,n,c=function(t,e){if(null==t)return{};var r,n,c={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(c[r]=t[r]);return c}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(c[r]=t[r])}return c}var u=n.createContext({}),s=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},p=function(t){var e=s(t.components);return n.createElement(u.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,c=t.mdxType,i=t.originalType,u=t.parentName,p=a(t,["components","mdxType","originalType","parentName"]),f=s(r),y=c,h=f["".concat(u,".").concat(y)]||f[y]||l[y]||i;return r?n.createElement(h,o(o({ref:e},p),{},{components:r})):n.createElement(h,o({ref:e},p))}));function y(t,e){var r=arguments,c=e&&e.mdxType;if("string"==typeof t||c){var i=r.length,o=new Array(i);o[0]=f;var a={};for(var u in e)hasOwnProperty.call(e,u)&&(a[u]=e[u]);a.originalType=t,a.mdxType="string"==typeof t?t:c,o[1]=a;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},91691:function(t,e,r){r.r(e),r.d(e,{assets:function(){return p},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var n=r(83117),c=r(80102),i=(r(67294),r(3905)),o=["components"],a={},u=void 0,s={unversionedId:"dictionary/Architecture_Dictionary/Objects/Outputs",id:"dictionary/Architecture_Dictionary/Objects/Outputs",title:"Outputs",description:"Outputs are links to Instance Projects which the Project is working on and therefore changing. Every Instance Project must be in the Output of a Project or another Instance Project, even if that Project is a Ghost",source:"@site/interblock/dictionary/Architecture_Dictionary/Objects/Outputs.md",sourceDirName:"dictionary/Architecture_Dictionary/Objects",slug:"/dictionary/Architecture_Dictionary/Objects/Outputs",permalink:"/interblock/dictionary/Architecture_Dictionary/Objects/Outputs",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/interblock/dictionary/Architecture_Dictionary/Objects/Outputs.md",tags:[],version:"current",frontMatter:{},sidebar:"interblock",previous:{title:"Origin",permalink:"/interblock/dictionary/Architecture_Dictionary/Objects/Origin"},next:{title:"Parameters",permalink:"/interblock/dictionary/Architecture_Dictionary/Objects/Parameters"}},p={},l=[],f={toc:l};function y(t){var e=t.components,r=(0,c.Z)(t,o);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Outputs are links to Instance Projects which the Project is working on and therefore changing. Every Instance Project must be in the Output of a Project or another Instance Project, even if that Project is a Ghost"))}y.isMDXComponent=!0}}]);