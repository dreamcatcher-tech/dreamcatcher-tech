"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[7803],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(r),p=i,h=m["".concat(l,".").concat(p)]||m[p]||d[p]||a;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},99141:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(83117),i=(r(67294),r(3905));const a={},o=void 0,c={unversionedId:"DPL/DreamcatcherContract001",id:"DPL/DreamcatcherContract001",title:"DreamcatcherContract001",description:"Mandatory Clauses",source:"@site/license/DPL/DreamcatcherContract001.md",sourceDirName:"DPL",slug:"/DPL/DreamcatcherContract001",permalink:"/license/DPL/DreamcatcherContract001",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/license/DPL/DreamcatcherContract001.md",tags:[],version:"current",frontMatter:{},sidebar:"license",previous:{title:"Dreamcatcher Public License",permalink:"/license/DPL"},next:{title:"Module Example",permalink:"/license/DPL/Module Example"}},l={},s=[{value:"Mandatory Clauses",id:"mandatory-clauses",level:2},{value:"Declaration of Consistency",id:"declaration-of-consistency",level:3},{value:"Primacy",id:"primacy",level:3},{value:"Attribution",id:"attribution",level:3},{value:"Primacy Ordering",id:"primacy-ordering",level:3},{value:"Payload Parameters",id:"payload-parameters",level:2},{value:"Mandatory Parameters",id:"mandatory-parameters",level:3},{value:"Optional Parameter Definitions",id:"optional-parameter-definitions",level:3},{value:"Payload Clauses",id:"payload-clauses",level:2},{value:"Attribution",id:"attribution-1",level:3},{value:"Included Modules",id:"included-modules",level:3},{value:"Stuff to be built",id:"stuff-to-be-built",level:3},{value:"Work to be Carried Out",id:"work-to-be-carried-out",level:3},{value:"Acceptance Criteria",id:"acceptance-criteria",level:3},{value:"Term and Termination",id:"term-and-termination",level:3},{value:"Arbiter",id:"arbiter",level:3},{value:"Attribution",id:"attribution-2",level:3},{value:"License",id:"license",level:3}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"mandatory-clauses"},"Mandatory Clauses"),(0,i.kt)("h3",{id:"declaration-of-consistency"},"Declaration of Consistency"),(0,i.kt)("p",null,"This Contract is consistent with the Dreamcatcher Public License, and any License Modules stated in Parameters."),(0,i.kt)("h3",{id:"primacy"},"Primacy"),(0,i.kt)("p",null,"Nothing in this Dreamcatcher Contract may contradict or supersede any clause within the DPL. If put to Arbitration, the Arbiter must rule in line with the DPL before considering any interaction with this Module."),(0,i.kt)("p",null,"This Contract may extend the included License Modules through Parameters. Nothing in this Dreamcatcher Contract should be construed as contradicting any clause within an included License Module."),(0,i.kt)("h3",{id:"attribution"},"Attribution"),(0,i.kt)("p",null,"Any Attribution due will be distributed by the Attribution Algorithm."),(0,i.kt)("h3",{id:"primacy-ordering"},"Primacy Ordering"),(0,i.kt)("p",null,"License Modules declared first have primacy over License Modules declared after it. No clause in any subsequent License Module may contradict or supersede any clause in a previous License Module."),(0,i.kt)("h2",{id:"payload-parameters"},"Payload Parameters"),(0,i.kt)("h3",{id:"mandatory-parameters"},"Mandatory Parameters"),(0,i.kt)("p",null,"Does this Contract require a Core License Signature? ","[{Yes}]","\nCore License in force: ","[{Core DPL v0.1}]","\nIncluded Modules: ","[{Mutual NDA}]",", ","[{Termination Module}]","\nSignatories: ","[{User 1}]","; ","[{User 2}]","; ","[{User 3}]","; ","[{User 4}]","\nProject this Contract applies to: ","[{Project 1}]","\nMinimum Term: ","[{None}]","\nTermination: ","[{None}]","\nNominated Arbiter: ","[{Artbiter 1}]","\nAsset to be produced\nDescription\nMetrics to be achieved.\nLicense - open source or closed?\nPayment - input parameters for Attribution\nFixed payment, and/or\nTime spent payment, and/or\nAttribution input parameters.\nSweat investment and Capital Investment split\nAcceptance Criteria\nAcceptance Period\nTests to be performed\nRemediation Period\nAudit Service: ","[{Escrow}]"),(0,i.kt)("h3",{id:"optional-parameter-definitions"},"Optional Parameter Definitions"),(0,i.kt)("p",null,"Widget - something that widges.\nNoWidgets - total count of Widgets to be produced.\nLocal Parameter\nWidget: ","[{Joobjjoob}]","\nNoWidgets: ","[{5}]"),(0,i.kt)("h2",{id:"payload-clauses"},"Payload Clauses"),(0,i.kt)("h3",{id:"attribution-1"},"Attribution"),(0,i.kt)("p",null,"[{Signatories}]"," agree that all Contributions under this contract attract Attribution at a Dispersal Event, and do not incur or imply costs before that point."),(0,i.kt)("h3",{id:"included-modules"},"Included Modules"),(0,i.kt)("p",null,"[{Included Modules}]"," are in force in this agreement."),(0,i.kt)("h3",{id:"stuff-to-be-built"},"Stuff to be built"),(0,i.kt)("p",null,"[{NoWidgets}][{Widget]","} to be built."),(0,i.kt)("h3",{id:"work-to-be-carried-out"},"Work to be Carried Out"),(0,i.kt)("p",null,"The ","[{Signatories}]"," are to work on ","[{DreamcatcherLaunchProject:/Assets}]"," as detailed from time to time at ","[{DreamcatcherLaunchProject:/Issues}]","."),(0,i.kt)("h3",{id:"acceptance-criteria"},"Acceptance Criteria"),(0,i.kt)("p",null,"All Pull Requests accepted to ","[{DreamcatcherLaunchProject:/Assets}]"," are considered Contributions."),(0,i.kt)("h3",{id:"term-and-termination"},"Term and Termination"),(0,i.kt)("p",null,"Minimum term is ","[{Minimum Term}]",". Termination is ","[{Termination}]",", which may be varied from time to time through ","[{self}]","."),(0,i.kt)("h3",{id:"arbiter"},"Arbiter"),(0,i.kt)("p",null,"[{Signatories}]"," nominate ","[{Arbiter}]"," to judge on disputes in accordance with the Core DPL, and the Contract advertised by ","[{Arbiter}]","."),(0,i.kt)("h3",{id:"attribution-2"},"Attribution"),(0,i.kt)("p",null,"[{Signatories}]"," agree to be held by the Core DPL Clause on Attribution. The Attribution Algo is at ","[{Contract/Attribution}]"),(0,i.kt)("h3",{id:"license"},"License"),(0,i.kt)("p",null,"All Assets produced by ","[{Signatories}]"," are under ","[{License}]","."))}d.isMDXComponent=!0}}]);